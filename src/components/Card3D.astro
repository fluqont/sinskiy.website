---
interface Props {
  href: string;
  title: string;
  src: string;
}
const { href, title, src } = Astro.props;
---

<a href={href} aria-label={`visit ${title} demo`} class="image-wrapper">
  <img src={src} alt="" class="image" />
</a>

<style>
  .image-wrapper {
    flex: 1;
    border-radius: var(--rounded-lg);
    background-color: rgb(var(--surface));
    min-width: 200px;
    aspect-ratio: 5 / 3;
    display: grid;
    place-items: center;
    box-shadow: 0 0 5px var(--shadow);

    transition:
      transform 100ms ease-out,
      box-shadow 150ms ease-out;
    transform-style: preserve-3d;
    transform: perspective(1500px)
      scale3d(var(--scale), var(--scale), var(--scale))
      rotate3d(var(--rotateY), var(--rotateX), 0, var(--distance))
      translateZ(-16px);
  }
  .image-wrapper:hover {
    box-shadow: 0 5px 20px 5px var(--shadow);
  }

  .image {
    transform: translateZ(48px);
    filter: drop-shadow(0 0 8px var(--shadow));
  }
</style>

<script>
  const card = document.querySelector(".image-wrapper");
  let bounds: DOMRect;

  if (card instanceof HTMLAnchorElement) {
    card.addEventListener("mouseenter", () => {
      bounds = card.getBoundingClientRect();
      document.addEventListener("mousemove", rotateElement);
    });

    card.addEventListener("mouseleave", (e) => {
      document.removeEventListener("mousemove", rotateElement);
      setDefaultRotation(e);
    });

    function setDefaultRotation(e: MouseEvent) {
      const card = e.currentTarget as HTMLLIElement;
      card.style.setProperty("--rotateX", "0");
      card.style.setProperty("--rotateY", "0");
      card.style.setProperty("--distance", "0deg");
      card.style.setProperty("--scale", "1");
    }

    function rotateElement(e: MouseEvent) {
      const x = e.clientX - bounds.x;
      const y = e.clientY - bounds.y;

      const centerX = x - bounds.width / 2;
      const centerY = y - bounds.height / 2;

      const distance = Math.sqrt(centerX ** 2 + centerY ** 2);

      const anchor = card as HTMLAnchorElement;
      anchor.style.setProperty("--rotateX", String(centerX / 100));
      anchor.style.setProperty("--rotateY", String(-centerY / 100));
      anchor.style.setProperty("--distance", Math.log(distance) * 2 + "deg");
      anchor.style.setProperty("--scale", String(1.1));
    }
  }
</script>
