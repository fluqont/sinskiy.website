---
import { Thought } from "astro:db";
import { db } from "astro:db";
import markdownit from "markdown-it";
import { formatRelative } from "date-fns";

const thoughts = (await db.select().from(Thought)).reverse();
const md = markdownit({ linkify: true });
---

{
  thoughts.length > 0 ? (
    <ul class="thoughts" role="list">
      {thoughts.map((thought) => (
        <li class="thought">
          <div class="header">
            <adress class="author">{thought.username}</adress>
            <time class="time" datetime={thought.date.toISOString()}>
              {formatRelative(thought.date, new Date())}
            </time>
          </div>
          <div
            class="text"
            set:html={md.render(thought.message).replace("<h1>", "<p>")}
          />
        </li>
      ))}
    </ul>
  ) : (
    <p>
      <i>no thoughts yet</i>
    </p>
  )
}

<style>
  .thoughts {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .thought {
    padding: 1rem 2rem;
    background-color: rgb(var(--surface));
    border-radius: var(--rounded-base);
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
    overflow-wrap: break-word;
  }

  .header {
    display: flex;
    gap: 0.5rem;
    align-items: end;
    flex-wrap: wrap;
    font-family: var(--monospace);
  }

  .author {
    color: rgb(var(--foreground-variant));
    font-weight: 600;
  }

  .time {
    color: rgb(var(--foreground-variant) / 0.8);
    font-size: 0.875rem;
  }
</style>
