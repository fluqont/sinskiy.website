---
import SectionPlaceholder from "../SectionPlaceholder.astro";
// TODO: change links
const projects = [
  {
    name: "Seterra extra",
    img: "seterra-extra-logo.svg",
    link: "https://github.com/Sinskiy/seterraextra",
    description:
      "Extension, that adds many cool features for Seterra - website for learning geography",
  },
  {
    name: "Personal website",
    img: "logo-projects.svg",
    link: "https://github.com/Sinskiy/sinskiy.github.io",
    description: "This website",
  },
];
---

<!-- it isn't working with just isColumn=false.... -->
<SectionPlaceholder sectionId="projects">
  <div id="projects--wrapper" class="center flex">
    {
      projects.map((project) => (
        <div class="project" title={project.description}>
          <a
            href={project.link}
            target="_blank"
            aria-label={`Go to my project named ${project.name}. Description of this project is ${project.description}`}
          />
          <div class="tooltips">
            <div class="tooltips-left">
              <div class="tooltip name" role="tooltip">
                {project.name}
              </div>
              <small class="description" role="definition">
                {project.description}
              </small>
            </div>
            <div class="tooltip arrow">
              <img src="arrow_outward.svg" alt="arrow outward" role="tooltip" />
            </div>
          </div>
          <div class="project-content center justifyCenter">
            <img
              src={project.img}
              alt={`${project.name} logo`}
              class="project-image"
            />
          </div>
        </div>
      ))
    }
  </div>
</SectionPlaceholder>

<style>
  #projects--wrapper {
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  /* https://codepen.io/Hyperplexed/pen/MWQeYLW */

  #projects--wrapper:hover > .project::after {
    opacity: 1;
  }

  .project {
    width: 500px;
    aspect-ratio: 5 / 3;
    height: auto;
    background-color: var(--white-transparent);

    border-radius: 10px;

    position: relative;

    overflow: hidden;

    transition: transform 0.2s;

    padding: 1rem 1.5rem;
  }

  .project:hover {
    transform: translateY(-5px);
  }

  .project:hover::before {
    opacity: 1;
  }

  .project::before,
  .project::after {
    content: "";

    border-radius: inherit;
    min-height: 100%;
    min-width: 100%;

    opacity: 0;

    position: absolute;
    left: 0px;
    top: 0px;

    transition: opacity 500ms;
  }

  .project::before {
    background: radial-gradient(
      800px circle at var(--mouse-x) var(--mouse-y),
      rgb(255 255 255 / 0.01),
      transparent 40%
    );
    z-index: 3;
  }

  .project::after {
    background: radial-gradient(
      600px circle at var(--mouse-x) var(--mouse-y),
      rgb(255 255 255 / 0.2),
      transparent 40%
    );
    z-index: 1;
  }

  .tooltips {
    display: flex;
    justify-content: space-between;

    width: 100%;
  }

  .tooltips-left {
    position: relative;
    z-index: 5;
  }

  .description {
    color: white;

    position: absolute;
    z-index: 3;

    opacity: 0;

    transition: opacity 0.3s;

    width: 200%;
    height: fit-content;

    margin-top: 1rem;
  }

  .tooltip.name {
    opacity: 0;
  }

  .tooltip.arrow {
    display: flex;
    height: fit-content;

    background-color: var(--white-transparent);

    padding: 0.625rem;
  }

  .tooltip.arrow > img {
    width: clamp(0.5rem, 2vw, 1rem);
    height: auto;
  }

  .project:nth-child(odd):hover .tooltip {
    background-color: var(--green);
  }

  .project:nth-child(even):hover .tooltip {
    background-color: var(--purple);
  }

  .project:hover .tooltip.name {
    opacity: 1;
  }

  .project:hover .description {
    opacity: 0.8;
  }

  .project-content {
    background-color: var(--black-transparent);
    overflow: hidden;
    border-radius: inherit;

    inset: 1px; /* actual thing that adds border */

    position: absolute;
    z-index: 2;
  }

  .project-content > img {
    width: 250px;
    height: auto;
  }

  .project:hover .project-content > img {
    filter: blur(15px) opacity(0.5);
  }

  .project > a {
    position: absolute;
    top: 0;
    left: 0;

    z-index: 5;
    min-width: 100%;
    min-height: 100%;
  }

  @media (max-width: 1200px) {
    #projects--wrapper {
      flex-direction: column;
    }
    .project {
      aspect-ratio: 5 / 3;
      width: clamp(100px, 70vw, 700px);
      height: 300px;
    }
  }

  @media (max-width: 700px) {
    .project {
      aspect-ratio: 5 / 3;
      height: 200px;
    }
    .project-content > img {
      width: clamp(100px, 30vw, 200px);
    }
  }

  @media (hover: none) {
    .project:nth-child(odd) .tooltip {
      background-color: var(--green);
    }

    .project:nth-child(even) .tooltip {
      background-color: var(--purple);
    }

    .project .project-content > img {
      filter: blur(10px);
    }

    .project .tooltip.name {
      opacity: 1;
    }

    .project .description {
      opacity: 0.8;
    }
  }
</style>

<script>
  const projectsWrapper = document.querySelector(
    "#projects--wrapper",
  ) as HTMLDivElement;
  const allProjects = document.querySelectorAll(
    ".project",
  ) as NodeListOf<HTMLDivElement>;
  projectsWrapper.addEventListener("mousemove", (e: MouseEvent) => {
    allProjects.forEach((project) => {
      const rect = project.getBoundingClientRect(),
        x = e.clientX - rect.left,
        y = e.clientY - rect.top;

      project.style.setProperty("--mouse-x", `${x}px`);
      project.style.setProperty("--mouse-y", `${y}px`);
    });
  });
</script>
