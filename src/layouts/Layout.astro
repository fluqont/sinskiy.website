---
import Header from "../components/Header.astro";
import "../styles/index.css";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>sinskiy</title>
    <link rel="shortcut icon" href="/favicon.svg" type="image/x-icon" />
    <script is:inline>
      const systemTheme = window.matchMedia("(prefers-color-scheme: dark)")
        .matches
        ? "dark"
        : "light";
      const savedSystemTheme = localStorage.getItem("system-theme");

      if (systemTheme !== savedSystemTheme) {
        localStorage.setItem("system-theme", systemTheme);
        localStorage.setItem("theme", systemTheme);
        document.documentElement.classList.add(systemTheme);
      } else {
        const savedTheme = localStorage.getItem("theme");
        document.documentElement.classList.add(savedTheme);
      }
    </script></head
  >

  <body>
    <Header />
    <slot />
  </body>

  <style>
    body {
      max-width: 1000px;
      margin: 1rem auto;
      padding: 0 0.5rem;
      display: flex;
      flex-direction: column;
      gap: 1.5rem;
    }
  </style>

  <script>
    const animatedHover = document.querySelectorAll(".animated-hover");
    for (const element of animatedHover) {
      if (element instanceof HTMLElement) {
        const htmlElement = element;
        let bounds: DOMRect;
        element.addEventListener("mouseenter", handleEnter);

        function handleEnter() {
          bounds = htmlElement.getBoundingClientRect();
          htmlElement.addEventListener("mousemove", handleMove);
        }

        function handleMove(e: MouseEvent) {
          const middleX = htmlElement.offsetWidth / 2;
          const middleY = htmlElement.offsetHeight / 2;

          const x = e.clientX - bounds.left;
          const y = e.clientY - bounds.top;

          const centerX = x - middleX;
          const centerY = y - middleY;

          const distanceX = (centerX / htmlElement.offsetWidth) * 100;
          const distanceY = (centerY / htmlElement.offsetHeight) * 100;

          const COEFFICIENT = 1.5;
          htmlElement.style.setProperty("--x", distanceX / COEFFICIENT + "%");
          htmlElement.style.setProperty("--y", distanceY / COEFFICIENT + "%");
        }
      }
    }
  </script>
</html>
