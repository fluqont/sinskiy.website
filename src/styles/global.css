/* variables */
@property --angle {
    syntax: '<angle>';
    inherits: false;
    initial-value: 0deg;
}

:root {
    /* color */
    --gray: #BABABA;
    --dark-gray: #232323;
    --green: #00FF57;
    --purple: #DB00FF;

    --white-transparent: rgba(255, 255, 255, 0.1);
    --black-transparent: rgba(0, 0, 0, 0.5);
    --black-more-transparent: rgba(0, 0, 0, 0.1);

    --darker-green: #10321C;
    --darker-blue: #232831;
    --darker-purple: #2E1032;

    /* gradients */
    --background-gradient: linear-gradient(70deg,
        var(--darker-green) 0%,
        var(--darker-blue) 50%,
        var(--darker-purple) 100%);
}

/* normalization */

html {
    scroll-behavior: smooth;
    scroll-padding-top: 30vh;
    color-scheme: dark;
}

body {
    margin: 0;
    display: flex;
    flex-direction: column;
    align-items: center;

    animation: on-load 3s;
}

a {
    text-decoration: none;
    color: white;
}

::selection {
    background: var(--green);
    color: white;
    -webkit-text-fill-color: white;
}

/* bg */

body {
    background:
        var(--background-gradient);
}

/* flex */
.flex {
    display: flex;
}
.center {
    display: flex;
    align-items: center;
}

.center.column, .flex.column {
    flex-direction: column;
}

.justifyCenter { /* i need to use camelCase cuz astro doesn't allow to pass dash */
    justify-content: center;
}

/* global typography */
a, small, .tooltip {
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

small {
    color: var(--gray);
}

small, .tooltip, .description {
    font-size: clamp(0.5rem, 5vw, 1.5rem);
}


button {
    font-family: "Red Rose", sans-serif;
}

h4 {
    color: var(--gray);
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    font-size: clamp(1rem, 3vw, 1.5rem);
    font-weight: 400;
}

/* tooltip */
.tooltip {
    display: flex;
    align-items: center;

    height: 2rem;
    border-radius: 10rem;

    background-color: var(--white-transparent);
    color: var(--dark-gray);

    z-index: 5;

    transition: all 0.3s;
}

.tooltip.name {
    padding: 0 clamp(0rem, 5vw, 1.5rem);
}

/* button */
button {
    background: transparent;
    border: none;
}

.h3CustomText, h3 {
    font-family: "Red Rose", sans-serif;
    font-size: clamp(1rem, 5vw, 3rem);

    margin: 0;
}

.h5CustomText {
    color: white;
    font-family: "Red Rose", sans-serif;
    font-size: clamp(1.2rem, 3vw, 1.5rem);
    font-weight: 300;
}

/* specific typography */

.link {
    color: var(--gray);
    font-size: clamp(1rem, 3vw, 1.5rem);
    font-weight: 400;
    text-transform: capitalize;
}

.link:hover {
    color: white;
}

/* border gradient hack. thanks to https://stackoverflow.com/questions/51496204/border-gradient-with-border-radius */

.button-gradient-wrapper {
    position: relative;
    border-radius: 10rem;
    background-color: var(--darker-blue);
}

.button-gradient-wrapper::before, .button-gradient-wrapper::after {
    --angle: 0deg;
    content: "";
    position: absolute;
    inset: 0;

    border-radius: 10rem;

    background: conic-gradient(from var(--angle), var(--green) 0%, var(--purple) 100%);

    animation: button-gradient--animation 5s infinite;
    transition: --angle 0s;
}

.button-gradient-wrapper::before {
    -webkit-mask:
    linear-gradient(#fff 0 0) content-box,
    linear-gradient(#fff 0 0);
         mask:
    linear-gradient(#fff 0 0) content-box,
    linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
         mask-composite: exclude;
    padding: 5px;
}

.button-gradient-wrapper::after {
    opacity: 0;
    filter: blur(50px);
    z-index: -1;

    transition: opacity 0.3s ease-in;
}

.button-gradient-wrapper:hover::after {
    opacity: 0.7;
}

/* media */
@media (max-width: 700px) {
    .button-gradient-wrapper::before, .button-gradient-wrapper::after {
        padding: 3px;
    }
}

/* button with gradient animation */
@keyframes button-gradient--animation {
    from {
        --angle: 0deg;
    }
    to {
        --angle: 360deg;
    }
}

/* load animation */
@keyframes on-load {
    from {
        filter: opacity(0);
    }
    to {
        filter: opacity(1);
    }
}